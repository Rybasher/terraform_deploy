name: Blue Print Proxy Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy_to_ecs:
    name: 'Deploy updated container image via blue/green deployment to ECS service.'
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get current image tag
        id: current-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          
          IMAGE_TAG=$(aws ecr describe-images --output json --repository-name default-api-test-repo --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]')
          echo "::set-output name=image-tag::$ECR_REGISTRY/default-api-test-repo:${IMAGE_TAG}"

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: default-api-test-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/default-api-test-repo:$IMAGE_TAG .
          docker push $ECR_REGISTRY/default-api-test-repo:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/default-api-test-repo:$IMAGE_TAG"

      - name: Blue green deploy
        uses: silinternational/ecs-deploy@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        with:
          aws_access_key_cmd: '--aws-access-key'
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key_cmd: '--aws-secret-key'
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cluster_cmd: '--cluster'
          cluster: 'default-api-test-cluster'
          image_cmd: '--image'

          image: ${{ steps.build-image.outputs.image }}
          region_cmd: '--region'
          region: 'us-east-1'
          service_name_cmd: '--service-name'
          service_name: 'default-api-test-service'
          timeout_cmd: '--timeout'
          timeout: '320'
